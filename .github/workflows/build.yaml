name: Build

on: push

jobs:
  test:
    runs-on: ${{ matrix.os }}
    env:
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    container: ${{ matrix.os == 'ubuntu-latest' && 'quay.io/pypa/manylinux2014_x86_64:latest' || null }}
    strategy:
      matrix:
        rust: [stable]
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: macOS-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: "x86_64-pc-windows-msvc"
          - os: ubuntu-latest
            target: "x86_64-unknown-linux-gnu"
    steps:
      - name: "Checkout Repo"
        uses: actions/checkout@v3.5.3
      - name: Install Rustup
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --location --silent --show-error --fail "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        shell: bash
      - name: "Install Rust"
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - name: Build the crate for release
        run: cargo build --release --features emacs
      - name: Run tests
        if: matrix.os != 'windows-latest'
        run: cargo test --verbose
